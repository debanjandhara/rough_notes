### Coding Pattern Preferences

- Always prefer simple solutions.
- Avoid duplication of code whenever possible. This means checking other areas of the codebase that might already have similar code and functionality.
- Write code that takes into account the different environments: dev, test, and prod.
- Be careful to only make changes that are requested or that you are confident are well understood and related to the change being requested.
- When fixing an issue or bug, do not introduce a new pattern or technology without first exhausting all options for the existing implementation. If you do eventually make changes, make sure to remove the old implementation afterward so we donâ€™t have duplicate logic.  
- Keep the codebase very clean and organized.
- Avoid writing scripts in files if possible, especially if the script is likely only to be run once.
- Avoid having files with over 200-300 lines of code. Refactor at that point.
- Mocking data is only needed for tests; never mock data for dev or prod environments.
- Never add stubbing or fake data patterns to code that affects the dev or prod environments.
- Never overwrite my .env file without first asking and confirming.
